name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  check-python:
    name: Check for Python Requirements
    runs-on: ubuntu-latest
    outputs:
      requirements-exists: ${{ steps.check-reqs.outputs.exists }}
    steps:
      - uses: actions/checkout@v5
      - name: Check for requirements.txt
        id: check-reqs
        shell: bash
        run: |
          if [ -f requirements.txt ] || find . -name "requirements.txt" -type f | grep -q .; then
            echo "exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "exists=false" >> "$GITHUB_OUTPUT"
          fi

  node:
    name: Node Lint, Typecheck, Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    steps:

      - uses: actions/checkout@v4
      - uses: actions/setup-node@v5

        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - name: Install dependencies
        run: npm ci || npm install
      - name: Lint
        run: npm run lint --if-present
      - name: Typecheck
        run: npm run typecheck --if-present || npx tsc --noEmit || true
      - name: Test
        run: npm test --if-present || true

  python:
    name: Python Lint and Test
    runs-on: ubuntu-latest
    needs: check-python
    if: ${{ needs.check-python.outputs.requirements-exists == 'true' }}
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint (flake8)
        run: |
          pip install flake8 || true
          flake8 . || true
      - name: Test (pytest)
        run: |
          pip install pytest || true
          pytest -q || true
